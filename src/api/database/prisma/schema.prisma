// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  enterprise String
  userName   String
  email      String    @unique
  password   Password?
  sales      Sale[]
  createdAt  DateTime  @default(now())
}

model Password {
  id     String @id @default(uuid())
  pass   String
  User   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Session {
  id        String   @id @default(uuid())
  email     String
  userName  String
  valid     Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Sale {
  id                String           @id @default(uuid())
  debitNote         Decimal?
  description       String?
  totalAmount       Decimal
  User              User             @relation(fields: [userId], references: [id])
  userId            String
  MovementType      MovementType     @relation(fields: [movementId], references: [id])
  movementId        String
  OperationType     OperationType?   @relation(fields: [operationTypeId], references: [id])
  operationTypeId   String?
  FinancialEntity   FinancialEntity? @relation(fields: [financialEntityId], references: [id])
  financialEntityId String?
  createdAt         DateTime         @default(now())
}

model MovementType {
  id        String   @id @default(uuid())
  nameEs    String
  nameEn    String
  sales     Sale[]
  createdAt DateTime @default(now())
}

model OperationType {
  id        String   @id @default(uuid())
  nameEs    String
  nameEn    String
  sales     Sale[]
  createdAt DateTime @default(now())
}

model FinancialEntity {
  id        String   @id @default(uuid())
  name      String
  sales     Sale[]
  createdAt DateTime @default(now())
}
